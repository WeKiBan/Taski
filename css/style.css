/* Variables */
:root {
  --body-font-style: 'Quicksand', sans-serif;
  --primary-bg-color: #fff;
  --secondary-bg-color: #ecf0f1;
  --primary-font-color: rgba(0, 0, 0, 0.63);
  --border-color: rgba(26, 26, 26, 0.384);
  --mid-orange: rgba(252, 193, 74, 0.644);
  --top-red: rgba(226, 87, 80, 0.664);
  --low-green: rgba(73, 215, 135, 0.466);
}

html,
body {
  max-width: 100%;
  max-height: 100vh;
  overflow: hidden;
}

body {
  font-family: var(--body-font-style);
}

/* NAVBAR */
.navbar {
  background: var(--primary-bg-color);
  font-family: var(--body-font-style);
  border-bottom: 1px solid var(--border-color);
  border-top: 1px solid var(--border-color);
  font-size: 1.3rem !important;
}

/* toggle button */
.fa-bars:hover {
  transform: scale(1.1);
  opacity: 0.5;
  transition: 0.3s;
}

/* LOGO COLORS */
.green {
  color: var(--low-green);
}
.yellow {
  color: var(--mid-orange);
}
.red {
  color: var(--top-red);
}

/* SIDE MENU STYLING */

/* close btn */
.fa-times {
  position: absolute;
  top: 1.5rem;
  right: 1.5rem;
  font-size: 1.3rem;
  cursor: pointer;
  transition: 0.3s;
}

.fa-times:hover {
  transform: scale(1.2);
}

/* side menu style */
.side-menu {
  /* height: 100%; */
  width: 250px;
  position: fixed;
  z-index: 1250;
  top: 0;
  left: 0;
  bottom: 0;
  background-color: var(--primary-bg-color);
  overflow: hidden;
  padding: 1rem;
  transition: transform 0.5s;
  transform: translateX(-100%);
  border-right: 1px solid var(--border-color);
  border-bottom: 1px solid var(--border-color);
}

/* To show side menu when open */
.open .side-menu {
  transform: translateX(0);
}

/* lists inside side menu */
.lists {
  padding: 0;
  margin: 1.5rem 0 1rem 0;
  list-style: none;
}

.lists li {
  padding: 0.5rem 0;
  font-weight: 300;
  cursor: pointer;
  transition: ease-in-out 0.3s;
}

.lists li:hover {
  background-color: rgba(0, 0, 0, 0.048);
}

.lists li.active {
  font-weight: 500;
}

/* Form to add new task */
.new-list-form {
  display: flex;
  flex-direction: column;
}
.new-list-btn {
  border: none;
  background: none;
}
.new-list-input {
  border: none;
  border-bottom: 1px solid var(--border-color);
  font-weight: 100;
}

/* Main page content wrapper */
#main {
  position: relative;
  display: flex;
  flex-direction: column;
  transition: 0.5s;
  width: 100vw;
  height: 100vh;
  background: var(--secondary-bg-color);
}
/* Main page content pushed over when open */
.open #main {
  margin-left: 250px;
  transition: 0.5s;
  background-color: rgba(0, 0, 0, 0.4);
}

/* style for overlay when side menu is open */
.open .overlay {
  position: absolute;
  width: 100%;
  height: 100vh;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 1000;
  transition: 0.5s;
}

/* sort and current list name container */
.sort-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 1rem;
  background: var(--primary-bg-color);
  border-bottom: 1px solid var(--border-color);
  font-size: 0.8rem;
}

.sort-dropdown {
  border: 1px solid var(--border-color);
  color: grey;
  border-radius: 3px;
}

/* Edit list name btn */
.edit-list-name-btn {
  font-size: 1rem;
  cursor: pointer;
  transition: ease-in-out 0.3s;
}

.edit-list-name-btn:hover {
  font-size: 1rem;
  opacity: 0.5;
  transform: scale(1.1);
}

/* Current list container */
.current-list-container-wrapper {
  position: relative;
  display: flex;
  flex: 1 1 auto;
  overflow: hidden;
}

.current-list-container {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  gap: 12px;
  overflow: scroll;
  padding: 2rem;
  width: 100%;
  transition: all 2s linear;
  padding-top: 3.1rem;
}

/* alert div */
.alert-div {
  position: absolute;
  top: 0.6rem;
  width: 100%;
  left: 50%;
  transform: translateX(-50%);
  z-index: 900;
}

/*  Message when there are no tasks */
.empty-message-container {
  display: flex;
  flex-direction: column;
  text-align: center;
  justify-content: center;
  align-items: center;
  color: grey;
  margin: auto;
  font-weight: 100;
  cursor: default;
  opacity: 0.5;
  padding: 0 1rem 3rem 1rem;
}

.empty-message-container img {
  opacity: 0.5;
}

/* Current List buttons */
.new-task-btn {
  transition: 0.2s;
  position: absolute;
  top: 0.5rem;
  left: 1rem;
  font-size: 1.6rem;
  z-index: 1000;
}

.new-task-btn:hover {
  transform: scale(1.1);
  opacity: 0.5;
}

/* search bar */
.search-box {
  background: none;
  position: absolute;
  right: 0.8rem;
  top: 0.4rem;
  height: 40px;
  border-radius: 40px;
  border: none;
  z-index: 1000;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  padding-right: 0.5rem;
}

.search-box:hover a {
  text-decoration: none;
  opacity: 0.5;
}

.focus-border {
  border: 2px solid rgba(119, 119, 119, 0.438);
}

.search-btn {
  color: #444444;
  float: right;
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 0;
  font-size: 1.6rem;
}

.search-txt {
  border: none;
  background: none;
  outline: none;
  float: left;
  color: #444444;
  font-size: 16px;
  transition: 0.4s;
  line-height: 40px;
  width: 0;
}

.search-box:hover > .search-txt {
  width: 200px;
  margin-right: 0.4rem;
  padding-left: 1rem;
  background-color: var(--secondary-bg-color);
}

.search-txt:focus {
  width: 200px;
  margin-right: 0.4rem;
  padding-left: 1rem;
  background-color: var(--secondary-bg-color);
}

.search-box:hover {
  border: 2px solid rgba(119, 119, 119, 0.438);
}

.list-btn-container {
  display: flex;
  justify-content: flex-end;
  background: rgb(255, 255, 255);
  padding: 0.8rem;
  border-top: 1px solid var(--border-color);
}

/* Task Card Styling */
.task-card {
  height: 300px;
  width: 240px;
  background: white;
  border: solid 1px var(--border-color);
  border-radius: 5px;
  box-shadow: 7px 8px 19px -6px rgba(0, 0, 0, 0.322);
  transition: 0.2s;
}
/* class to make card shrink */
.task-card.shrink {
  transform: scale(0);
  transition: 0.2s;
}
.task-card-header {
  text-transform: capitalize;
  padding: 0 3rem;
}

.date-deadline {
  font-size: 0.9rem;
  opacity: 0.6;
  font-weight: 100;
}

.task-notes {
  max-height: 60%;
  overflow: scroll;
}

.task-card-footer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 0.8rem;
  position: absolute;
  bottom: 0;
  width: 100%;
}

.card-body {
  font-weight: 200;
}

.complete-label {
  font-size: 1rem;
  opacity: 0.5;
  font-weight: 300;
}

/* classes to change bottom border depending on level of priority */
.top-priority {
  border-bottom: solid var(--top-red) 6px;
}
.mid-priority {
  border-bottom: solid var(--mid-orange) 6px;
}
.low-priority {
  border-bottom: solid var(--low-green) 6px;
}

/* Edit card btn */
.editBtn {
  position: absolute;
  top: 0.3rem;
  right: 0.5rem;
  opacity: 0.5;
  transition: ease-in-out 0.5s;
}

.editBtn:hover {
  opacity: 1;
  transform: scale(1.1);
}

/* delete btn styles */
.fa-trash-alt {
  font-size: 1.2rem;
  opacity: 0.5;
  cursor: pointer;
  transition: ease-in-out 0.3s;
}

.fa-trash-alt:hover {
  opacity: 1;
  transform: scale(1.1);
}

/* style to change card to grey if completed */
.completed {
  background: rgba(90, 90, 90, 0.322);
}

/* Custom checkbox bottom of card */
/* Customize the label (the container) */
.checkbox-container {
  display: inline;
  position: relative;
  cursor: pointer;
  font-size: 15px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  left: -1.8rem;
}

/* Hide the browser's default checkbox */
.checkbox-container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: -1px;
  left: 0;
  height: 18px;
  width: 18px;
  background-color: #eee;
}

/* On mouse-over, add a grey background color */
.checkbox-container:hover input ~ .checkmark {
  background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.checkbox-container input:checked ~ .checkmark {
  background-color: var(--low-green);
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: '';
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.checkbox-container input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.checkbox-container .checkmark:after {
  left: 7px;
  top: 3px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

/* MODAL STYLING */

.border-yellow {
  border-bottom: 1px solid var(--mid-orange);
}

.border-red {
  border-bottom: 1px solid var(--top-red);
}

.border-green {
  border-bottom: 1px solid var(--low-green);
}
/* Universal class */
.show {
  display: block !important;
}

/* MEDIA QUERY FOR WHEN PHONE IS SIDEWAYS */

@media screen and (min-width: 320px) and (max-width: 767px) and (orientation: landscape) {
  .task-card {
    height: 200px;
    width: 180px;
  }
  .navbar {
    display: none !important;
  }
  .current-list-container {
    padding: 1rem;
  }
  .complete-label {
    display: none;
  }
  .task-card-btns-container {
    position: absolute;
    right: 0.5rem;
    bottom: 0.1rem;
  }
  .task-notes {
    max-height: 40%;
    overflow: scroll;
  }
  .task-card-header {
    padding: 0.5rem;
  }

  .new-task-form,
  .edit-task-form {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-gap: 0.6rem;
  }
  .form-radio,
  .form-notes {
    order: -1;
  }
  .deadline-label,
  .priority-label {
    display: none;
  }
  .modal-header,
  .modal-footer {
    padding: 0.5rem 1rem;
  }
  .date-deadline {
    margin-bottom: 0.3rem;
  }
}
